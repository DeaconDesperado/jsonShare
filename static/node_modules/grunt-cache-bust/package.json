{
  "name": "grunt-cache-bust",
  "description": "Bust static assets from the cache using content hashing",
  "version": "0.1.1",
  "author": {
    "name": "Ben Holland",
    "email": "hi@benholland.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hollandben/grunt-cache-bust.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/hollandben/grunt-cache-bust/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt-contrib-watch": "~0.5.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "dependencies": {
    "cheerio": "~0.12.4"
  },
  "keywords": [
    "grunt",
    "grunt plugin",
    "cache",
    "bust",
    "bust assets"
  ],
  "readme": "# grunt-cache-bust\r\n\r\n[![Build Status](https://travis-ci.org/hollandben/grunt-cache-bust.png?branch=master)](https://travis-ci.org/hollandben/grunt-cache-bust)\r\n[![Dependency Status](https://david-dm.org/hollandben/grunt-cache-bust.png)](https://david-dm.org/hollandben/grunt-cache-bust)\r\n[![devDependency Status](https://david-dm.org/hollandben/grunt-cache-bust/dev-status.png)](https://david-dm.org/hollandben/grunt-cache-bust#info=devDependencies)\r\n\r\n> Bust static assets from the cache using content hashing\r\n\r\n## Getting Started\r\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\r\n\r\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\r\n\r\n```bash\r\nnpm install grunt-cache-bust --save-dev\r\n```\r\n\r\nOnce that's done, add this line to your project's Gruntfile:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-cache-bust');\r\n```\r\n\r\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\r\n\r\n[grunt]: http://gruntjs.com/\r\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\r\n[package.json]: https://npmjs.org/doc/json.html\r\n\r\n## The \"cacheBust\" task\r\n\r\nUse the **cacheBust** task for cache busting static files in your application. This allows them to be cached forever by the browser, justp oint the task towards any file that contains references to static assets.\r\n\r\n_Currently supported static assets: **CSS**, **JavaScript**, **images** and **favicons**_\r\n\r\n_Note:_ Remote URLs for CSS, JavaScript, and images are ignored by cacheBust.  This assumes that remote URLs for these assets will\r\nbe CDN hosted content, typically for well known libraries like jQuery or Bootstrap.  These URLs typically include a version\r\nidentifier in the URL to deal with browser caching, and it is in the best interest of your app to use the standard URL as-is\r\nto ensure browser cache hits for popular libraries.  For example, all of below URLs will be ignored:\r\n\r\n```html\r\n<link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\" rel=\"stylesheet\">\r\n<link href=\"http://twitter.github.com/bootstrap/assets/css/bootstrap.css\" rel=\"stylesheet\">\r\n<script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.0.6/angular.min.js\"></script>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://code.jquery.com/qunit/qunit-1.12.0.js\"></script>\r\n<img src=\"https://secure.gravatar.com/avatar/d3b2094f1b3386e660bb737e797f5dcc?s=420\" alt=\"test\" />\r\n```\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `cacheBust` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  cacheBust: {\r\n    options: {\r\n      encoding: 'utf8',\r\n      algorithm: 'md5',\r\n      length: 16\r\n    },\r\n    assets: {\r\n        files: [{\r\n            src: ['index.html']\r\n        }]\r\n    }\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.encoding\r\nType: `String`\r\nDefault value: `'utf8'`\r\n\r\nThe encoding of the file contents.\r\n\r\n#### options.algorithm\r\nType: `String`\r\nDefault value: `'md5'`\r\n\r\n`algorithm` is dependent on the available algorithms supported by the version of OpenSSL on the platform. Examples are `'sha1'`, `'md5'`, `'sha256'`, `'sha512'`\r\n\r\n#### options.length\r\nType: `Number`\r\nDefault value: `16`\r\n\r\nThe number of characters of the file content hash to prefix the file name with.\r\n\r\n#### options.rename\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nWhen true, `cachbust` will rename the refernce to the file and the file itself with the generated hash. When set to false, then a query string parameter is added to the end of the file reference.\r\n\r\n### Usage Examples\r\n\r\n#### Basic Asset Cache Busting\r\n\r\n```js\r\ngrunt.initConfig({\r\n  cacheBust: {\r\n    files: {\r\n      src: ['index.html', 'contact.html']\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n#### Custom Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  cacheBust: {\r\n    options: {\r\n      algorithm: 'sha1',\r\n      length: 32\r\n    },\r\n    files: [{\r\n      expand: true,\r\n      cwd: 'src',\r\n      src: ['*.html'],\r\n      dest: 'dest/'\r\n    }]\r\n  }\r\n})\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-cache-bust@0.1.1",
  "_from": "grunt-cache-bust@~0.1.1"
}
