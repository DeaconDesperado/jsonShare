'use strict';

var assert = require('should');
var main = require('../main.js');

describe('computeCompatibility', function() {
  it('should throw error when no compatibility found', function() {
      (function () {
        main.computeCompatibility([]);
      }).should.throwError();
  });

  it('return empty compatibility fields when empty input', function() {
    var emptyCompats = {
      bridge_dependencies: {},
      devices: []
    };

    var comp = main.computeCompatibility([emptyCompats]);
    comp.should.include(emptyCompats);
  });

  it('return equal compatibility fields when no dependencies', function() {
    var compats = {
      bridge_dependencies: {'bridge': '1.0.0'},
      devices: ['DESKTOP', 'WEB']
    };

    var comp = main.computeCompatibility([compats]);
    comp.should.include(compats);
  });

  it('takes higher common bridge version when dependencies present', function() {
    var comp = main.computeCompatibility([
      {
        bridge_dependencies: {'bridge': '1.0.0'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {'bridge': '1.0.1'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {'bridge': '1.0.2'},
        devices: ['DESKTOP']
      }
    ]);

    comp.should.include({
      bridge_dependencies: {'bridge': '1.0.2'},
      devices: ['DESKTOP']
    });
  });

  it('drops bridges not in all dependencies', function() {
    var comp = main.computeCompatibility([
      {
        bridge_dependencies: {'bridge': '1.0.0', 'bridge-drop': '1.0.0'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {'bridge': '1.0.0', 'bridge-drop': '1.0.0', 'bridges-jeff': '0.0.0'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {'bridge': '1.0.0', 'bridge-web': '2.0.0'},
        devices: ['DESKTOP']
      }
    ]);

    comp.should.include({
      bridge_dependencies: {'bridge': '1.0.0'},
      devices: ['DESKTOP']
    });
  });

  it('treat no bridge as all bridges', function() {
    var comp = main.computeCompatibility([
      {
        bridge_dependencies: {'bridge': '1.0.0', 'bridge-2': '3.2.1'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {'bridge': '1.0.0', 'bridge-2': '3.2.1', 'bridges-jeff': '0.0.0'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {},
        devices: ['DESKTOP']
      }
    ]);

    comp.should.include({
      bridge_dependencies: {'bridge': '1.0.0', 'bridge-2': '3.2.1'},
      devices: ['DESKTOP']
    });
  });

  it('treats two briges of same name but different majors as conflicts', function() {
    var comp = main.computeCompatibility([
      {
        bridge_dependencies: {'bridge': '1.0.0'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {'bridge': '2.0.0'},
        devices: ['DESKTOP']
      },
      {
        bridge_dependencies: {},
        devices: ['DESKTOP']
      }
    ]);

    comp.should.include({
      bridge_dependencies: {},
      devices: ['DESKTOP']
    });
  });

  it('takes the union of device classes', function() {
    var comp = main.computeCompatibility([
      {
        bridge_dependencies: {'bridge': '1.0.0'},
        devices: ['DESKTOP', 'WEB']
      },
      {
        bridge_dependencies: {'bridge': '1.0.0'},
        devices: ['DESKTOP', 'MOBILE']
      },
      {
        bridge_dependencies: {'bridge': '1.0.0'},
        devices: ['DESKTOP', 'TV', 'WEB']
      }
    ]);

    comp.should.include({
      bridge_dependencies: {'bridge': '1.0.0'},
      devices: ['DESKTOP']
    });
  });
});

