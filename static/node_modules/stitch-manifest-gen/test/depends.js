'use strict';

var assert = require('should');
var main = require('../main.js');

// TODO(blixt): Make this parse actual package.json data, so we can test the
// devDependencies and peerDepencies for real.
var dep = {
  "dependencies": {
    "foo": {version: "1.2.3"},
    "bar": {version: "1.2.0"}
  }
};

describe('testing dependency check', function() {

  it('should return false if no dependency is found', function() {
      main.depends(dep, 'baz').should.equal(false);
  });

  it('should return false if no dependency is found but a version is given', function() {
    main.depends(dep, 'baz', '1.0.0').should.equal(false);
  });

  it('should return true if a dependency is found but no version given', function() {
      main.depends(dep, 'foo').should.equal(true);
  });

  it('should return false if a dependency is found but version did not match', function() {
      main.depends(dep, 'foo', '0.8.2').should.equal(false);
  });

  it('should return true if a dependency is found and version match', function() {
      main.depends(dep, 'foo', '1.x').should.equal(true);
  });

  it('should return false if dependency found but rubbish version is passed', function() {
    main.depends(dep, 'foo', 'suyvduysv').should.equal(false);
  });

  it('should return false if dependency found but number version is passed', function() {
    main.depends(dep, 'foo', 123).should.equal(false);
  });

});
