'use strict';

var assert = require('should');
var main = require('../main.js');

describe('fetchCompatibilityFields', function() {
  it('fetches bridge_dependencies and devices from field', function() {
    var fields = main.fetchCompatibilityFields({
      "BundleType": "Application",
           "SupportedLanguages": [
      "en"
      ],
           "AppName": {
             "en": "App"
           },
           "AppDescription": {
             "en": "app"
           },
           "VendorIdentifier": "com.spotify",
           "BridgeDependencies": {
             "bridge": "1.0.0",
           "bridge2": "1.2.0"
           },
           "SupportedDeviceClasses": [
      "Desktop",
           "Web"
      ]
    });

    fields.should.include({
      "bridge_dependencies": {
        "bridge": "1.0.0",
        "bridge2": "1.2.0"
      },
      "devices": [
        "Desktop",
        "Web"
      ]
    });
  });

  it('return empty bridge_dependencies if not present', function() {
    var fields = main.fetchCompatibilityFields({
      "SupportedDeviceClasses": [
        "Desktop",
        "Web"
      ]
    });

    fields.should.include({
      "bridge_dependencies": {
      },
      "devices": [
        "Desktop",
        "Web"
      ]
    });
  });

  it('defauls to desktop when no SupportedDeviceClasses present', function() {
    var fields = main.fetchCompatibilityFields({});

    fields.should.include({
      "bridge_dependencies": {
      },
      "devices": [
        "Desktop",
      ]
    });
  });

  it('defauls to desktop when SupportedDeviceClasses empty', function() {
    var fields = main.fetchCompatibilityFields({
      'SupportedDeviceClasses': []
    });

    fields.should.include({
      "bridge_dependencies": {
      },
      "devices": [
        "Desktop",
      ]
    });
  });
});
